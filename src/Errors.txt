###########################################################
## $Id: Errors.txt,v 1.89 2002-07-05 19:12:06 swprakt Exp $
###########################################################

This file contains errors, bugs, features etc encountered in the
development process. The format of an error report should roughly adheres
to the following format:


  --------------------------------------------------------
  Error <nr>:    <short description>
    package:     <in which package/class does it occur
    status:      reported|confirmed|non-confirmed|repaired
	         repaired-confirmed

	       + <date> + <author>
   
    class:       fatal|non-fatal|
                 feature-request|coding convention violation ....

    description: <longer description, hints for repair>
   -----------------------------------------------------

Rules of the game:

	- In general, if someone reports an error in another package,
          the author should at least confirm the error.
  
        - If the error has been removed or otherwise been dealt
	  with, the reporter should be informed explicitely, who can
	  check whether he think's it's indeed repaired, and the 
	  entry should be copied to the bottom of the file
	  to the repaired errors section

------------------- Open errors ---------------------------------------


Errors 51:    cast
 package:     checks
 class:       fatal
 status:      reported, 5.7.02, Steffen
 description:        SFC sfc1 = Example.getExample1();
                     slime.absynt.Type t = tc.check(sfc1);
              gives
                general typecheck exception
                ParserTest: java.lang.ClassCastException: java.lang.ClassCastException

Error 50:     precedence
 package:     sfc-parser
 class:       debatable
 status:      reported, 5.7.02, Steffen
 description: (code inspection):
              lower the precendence of LEQ LT etc lower than +/*-.
              precedence left MUL, DIV;				   // *,/; MOD=%
              precedence left AND, OR, NEQ, LT, LEQ, GT, GEQ, EQ;	   // &&; ||, !=, <,<=,>,>=,==
	      (cf.also #49)


Error 46:   typecheck error
 class:     fatal
 package:     checks
 status:    reported, 5.7.02, Steffen
 description: parsing ``true and false'' gives
             Exception thrown:>>>>
             Type mismatch

Error 45:   null-pointer:
 package:   checks
 class:     should not happen, same as for #44
 status:    reported, 5.7.02 Steffen
 description:   java slime.checks.tests.TypecheckTest -e"5";  gives an exception
                java slime.checks.tests.TypecheckTest -e "5"; reads the commandline ok
 

Error 44:     null-pointer
 package:     sfcparser.
 class:       should not happen. Since it is a
              Testfile for internal usage, it's tolerable
 status:      reported, 5.7.02, Steffen
 description: java slime.sfcparser.ParserTest -3 =>

             ParserTest: before File
             ParserTest: before SFCParser
             ParserTest: before parseFile
             ParserTest: java.lang.NullPointerException
 
      
Error 43:     non-portanble code
 package:     sfcparser (v1.22, not branched one)
 class:       currenly non-fatal, in terms of compilation, but makes code non-maintanable, breaks abstraction,
              must be changed, therefore.
 status:      reported, 5.7.02 Steffen
 description: The following is bad style:

                  expr:l AND expr:r {: // AND && 4

                  java.lang.Integer opCode = new java.lang.Integer(4);
                  int opCodeValue = opCode.intValue();
                   RESULT = new slime.absynt.B_expr( l, opCodeValue, r ); 


               Better is something like:

1                  Exprx:l AND expr:r {: // AND && 4

                  int opCodeValue = slime.absynt.Expr.AND
                   RESULT = new slime.absynt.B_expr( l, opCodeValue, r ); 

	      If we would decide to renumber the expression in the absynt (and the
	      numbers are not part of the specification), the code will break.
		   

Error 42:     Nullpointer
 package:     sfcparser (but on the snapshot firstcompilaton-sep, so it's not clear whether
              it's in the real parser. 
	      Version =  $Id: Errors.txt,v 1.89 2002-07-05 19:12:06 swprakt Exp $ *
 class:       fatal (in also in the main branch), otherwise ok
 status:      reported, 5.7.02, Steffen
 description: parsing of   "true and false" gives:

               java slime.checks.tests.TypecheckTest -e "true and false"
               SFC Error: : SYNTAX ERROR
               SFC Error: : FATAL PARSING ERROR
               Error parsing expression: java.lang.NullPointerException
               ParserTest->SFCParseException: slime.sfcparser.SFCParseException: Error parsing expression

	       For crosschecking, I tested the utils parser:

                [tests @ gollum] > java slime.utils.TestParser
                Input SAP program:
                skip
                parse: skip
                *** Test: pretty print the result of parsing ***
                [StmtList] 
                |   [Skip] 
                |   [Stmt] 
                Input expression:
                true and false
                parse: true and false
                *** Test: pretty print the result of parsing ***
                [B_expr] 
                |   [Constval] true
                |   <AND> 
                |   [Constval] false
                Input declaration of form type [in|out|inout] var := val		
		seems ok.


Error 40:     typecheck expressions
 package:     checks (but partially branched out)
 class:       fatal
 status:      reporter, 5.7.02, Steffen 
 description: the type checker (expression) does not work as excpected,
              it returns the correct exception but not
	      the message (perhaps related to Error 41)
 

Error 39:     parser command line
 package:     sfcparser
 class:       curiosity
 status:      reporter, 5. 7 02, Steffen
 description: the expression parser accepts multiple arg's
              -e "2+5" -e "4+5"

Error 38:     compile error
 package:     all
 class:       deadly fatal
 status:      reporter, 4. Juli 02, Steffen
 description: Extending the visitor screwed it up (checker does not compile any more)


Error 34(2):  expression parser
 package:     parser
 class:       fatal
 status:      reporter, 4. Juli 02, Steffen
 description: I played aroud with the parser, to spot the 
              reason for Error 34.
              -  java slime.sfcparser.ParserTest -e "1*1 + 1"
	      gives 1*(1+1), which is wrong:

              [src @ gollum] > java slime.sfcparser.ParserTest -e "1*1 + 1"
              [B_expr] 
              |   [Constval] 1
              |   <TIMES> 
              |   [B_expr] 
              |   |   [Constval] 1
              |   |   <PLUS> 
              |   |   [Constval] 1

	      The result is independant of the order of the lines
              precedence left MUL, DIV;				   // *,/; MOD=%
              precedence left ADD, SUB;				   // +, -
	      in the parser!


              java slime.sfcparser.ParserTest -e "1 * 1 + 1"
              [B_expr] 
              |   [B_expr] 
              |   |   [Constval] 1
              |   |   <TIMES> 
              |   |   [Constval] 1
              |   <PLUS> 
              |   [Constval] 1




	      

Error 37:  expres. parser
 package:  parser
 class:    doubtful
 status:   reported, 4.Juli.02, Steffen
 description:  java slime.sfcparser.ParserTest -e "-1 + -4" parst
             dies als -(1 + (-4)). Das ist vermutlich nicht 
	     so gewollt, nat"urlicher w"are
	     
	             (-1) + (-4)

 

Error 23: deprecation
 package:  gui
 class:    non-fatal
 status:   reported, 28.6.02, Steffen
 description:  compiling the gui gives deprecation warnings:
          e.g.
          Note: GuiDialog.java uses or overrides a deprecated API.
          Note: Recompile with -deprecation for details.
  

Error 22: German 
 package: simulator
 class:   user-visible non-nicety
 status:  reported (=told Immo), Steffen, 26.6.02
 description: we should make the interface (buttons, Error msg's etc)
          uniformely English or German. Since the requirement etc are English, 
	  I would prefer that.
	  


Error 20: Makefile
 package:  general (or gui), src/Makefile (>= Version 1.17).
 status:   emailed, 27.6.02, Steffen
 class:    fatal (but not for compilation)
 description:  PACKAGEDIRS   = ....
		Jlex\
		java_cup\
		java_cup.runtime
	   does not work for make doc.



Error 8:       Manifest
 package:      Gui/all
 status:       emailed to Norbert, 24.06.02, M. Steffen
 class:        unclear, perhaps dubious/fatal depending on how it works
 description:  Is the Manifest-file at the right place (src/META-INF/Manifest)
               cf. also Error 4.
   
Error 6:       Makefile
  package:     top-level
  status:      reported 23.6.02 M.Steffen
  class:       fatal 
  description: top-level make does not work, make a better concept


Error 4:       Manifest file, toplevel file
  package:     Gui
  status:      reported 12.6.02, M. Steffen
  class:       promised feature missing
  description: Gui should provide a top-level file + Manifest to
               offer jar-rability

Error 3:      doc warnings
  package:    layout/paers
  status:     reported 12.6.2002 (M. Steffen)
  class:      non-fatal warnings
  description: Javadoc (=make doc) generates a few warnings.
             in layout.Layouter.java:
	      ``This sentence is different from what would 
	         be generated using -breakiterator:''
	     in ExprParser.html: unknown tags:
                    @parameter/ @optional.
             For the parser, we cannot repair it, since it
	     is generated by CUP/LEX		

Error 1:  parser warnings
   package:  utils.
   status: reported 12.6.2002 (M. Steffen)
   class:  warning, non-fatal
   description: Parser grammar contains superfluous stuff
	        (cf. lex/yacc output: 10 terminals declared but not used)



-------------------- Repaired errors -------------------------


Error 49:   parser error (even if raised by type checker)
 class:     debatable, precedence is no nice
 package:   utils.parser
 status:    reported, Steffen, 5.7.2002, repaired: I changed the order
            of the precedences in the Exp.cup file
 description: 
(1 <= 2) or  (-1 = (-2 * 4)) =>[B_expr] 
|   [B_expr] 
|   |   [Constval] 1
|   |   <LEQ> 
|   |   [Constval] 2
|   <OR> 
|   [U_Expr] 
|   |   <MINUS> 
|   |   [B_expr] 
|   |   |   [Constval] 1
|   |   |   <EQ> 
|   |   |   [U_Expr] 
|   |   |   |   <MINUS> 
|   |   |   |   [B_expr] 
|   |   |   |   |   [Constval] 2
|   |   |   |   |   <TIMES> 
|   |   |   |   |   [Constval] 4
here we go
General exception of the checks-package
ParserTest: java.lang.ClassCastException: java.lang.ClassCastException
make: *** [test] Error 1





Error 48:   parse error 
 class:     fatal
 package:   utils.parser (but the firstcompilaton-sep-version, which is unrepaired)
            Nope: also in the current version!
 status:    reported, repaired, steffen, 5.7.02. Ist not a real error, ")" is missing
 description: "(1 <= 2) or  (-1 = (-2 * 4)" gives

              ParserTest: slime.utils.ParseException: [module parser2] fatal parsing error



Errors47:   parser error
 class:     fatal 
 package:   utils/parser
 status:    reported: 5.7.02, Steffen: repaired: in the new
            checked out version, it's ok
 description:  description: I thought the error was repaired:

              1*2+3 =>[B_expr] 
                  |   [Constval] 1
                  |   <TIMES> 
                  |   [B_expr] 
                  |   |   [Constval] 2
                  |   |   <PLUS> 
                  |   |   [Constval] 3



Error 41:     super/sub confusion
 package:     checks (but partially branched out)
 class:       dubious
 status:      reported, 5.7.02, Steffen, I understood the problem:
              the methods need to be overwritten.
 description: I don't understand the super/sub etc 
              structure of the exceptions. Perhaps
	      this is the cause of #40.

	      Explanation: the structure of Exception und TypecheckException does not
	      work: it does not return the right message: Doing

		      System.out.println((new slime.checks.CheckException()).message);
		      System.out.println((new slime.checks.CheckException()).getMessage());
		      System.out.println((new slime.checks.TException()).message);
		      System.out.println((new slime.checks.TException()).getMessage());

	      (where TException is the same as TypecheckException, but not nested
	      inside, because I want to throw it outside) gives:
               General exception of the checks-package
               General exception of the checks-package
               General typecheck exception
               General exception of the checks-package


	       only line 3 is wanted. If I overwrite also
	       the get_message, then it is ok:

                  General exception of the checks-package
                  General exception of the checks-package
                  General typecheck exception
                  General typecheck exception.

               The error can be explained here:     
                     --------------------------------------

                     class A {int x = 5; int get_x () { return x;} }

                     class B extends A { int x = 6;}

                     public class Test {
                       public static void main (String args []) {
                         A a = new A();
                         System.out.println(a.x);
                         System.out.println(a.get_x());
                         B b = new B();
                         System.out.println(b.x);         // prints 6
                         System.out.println(b.get_x());   // prints 5!
                      }
                    }
		    --------------------------------------------



Error 34:     expression parsing
 package:     sfcparser
 class:       fatal
 status:      reported (email), 3.7.02, Steffen
 description:  java slime.sfcparser.ParserTest -e "(5*5*(1+3*3)+(9/7+1))"
              gives in the last summand:

	                9/(7+1)  :

               |   |   |   <PLUS>
               |   |   |   [B_expr]
               |   |   |   |   [Constval] 9
               |   |   |   |   <DIV>
               |   |   |   |   [B_expr]
               |   |   |   |   |   [Constval] 7
               |   |   |   |   |   <PLUS>
               |   |   |   |   |   [Constval] 1		

	       the cause of the error is unclear, since the	
	       precedences seem ok (sfcparser.SFC.cup v.1.13)

               precedence left ADD, SUB;				   // +, -
               precedence left MUL, DIV;				   // *,/; MOD=%

	       Since I (Steffen) cannot compile the parser, I cannot confirm the error.

Comment:       Since you won't set up your classpath according to the required one,
	       you cannot compile the parser. The required CLASSPATH is

		CLASSPATH=/home/java/JLex/JLex.jar:/home/java/Cup/java_cup.jar:<your WORKINGPATH>

	       you may also look at error 36 and 36.2, 24, ...

	       >>> This error has been explained, therefore it will
	       be solved. Error 34 is kept until the tests succeed
	       after the changes.



Error 5:       structure
  package:     absynt/check
  status:      reported 12.6.02, M. Steffen
  class:       bad style
  description: the public/protected etc structure is not nice,
               use inner classes instead?
	       I put it on the wish list


Error 26:    clean up
 package:    all
 class:      non-fatal
 status:     reported, 1.7.02, repaired (after group decision), 3. Jul 2002, Steffen
 description: remove the unused directoroes from
             the repos in the end, when the semester's
	     over.
 status:     commented, 03.07.02 mwe
	     Someone with the login-information might help us by
	     deleting src/JLex, src/java_cup, Slime/src/absynt,
	     Slime/src/utils, Slime/src/io, Slime/src/Editor, ...
	     BUT NOT Slime/src/slime

	     If this was done you might have a good chance for
	     getting the parser compiled with the wrong classpath:
                CLASSPATH=/home/ms/Swprakt/Slime/src:/home/java/JLex/JLex.jar:/home/java/cup/java_cup.jar:
	     
	    Otherwise the classpath has to be set the right way, for instance

                CLASSPATH=/home/java/JLex/JLex.jar:/home/java/cup/java_cup.jar:/home/ms/Swprakt/Slime/src

	    This is caused by the way java searches for classes.
	    -----
	    Steffen: According to group decision, the stuff was removed, the class path
	    set uniformely and that's it.


 Error 17:      structure
 package:      all
 status:       reported, 26.6.02
 class:        potentially fatal, cause of confusion
 description:  new subdir's added, but not announced, nor
               added to the readme, nor added to the Makefile

Error 21: Lex Archives
 package: general
 status:  email-discussion, reported by Steffe, 27.6.02
 class:   harmless (for compilation), questionable otherwise
 description: The archive files src/JLex/Archive/1.1.1...
          are not good for anything (and questionalble
	  from various other points, see discussion).
          


Error 25:    Shift/reduce
 package:    sfcparser
 class:      potentially fatal, need to be investigated
 status:     reporter 29.6.02, Steffen
 description: shift/reduce conflicts should at least be
             a matter of concern.
 status:     temporary solved, 29.06.02, mwe
	     indeed needs to be investigated tuesday 02.06,
	     simply setting the precedence of all nonterms 
	     to left can not be the solution. (mwe)


Error 24:    compilation broken
 package:    all
  class:     fatal and deadly
  status:    reported, 29.6.02, Steffen
  description: another compilation error (different from 18, 18 had
             been repaired in the meantime, as it seemed, there	
	     was a point in time where compilation was possible).
	     This time it's slime.sfcparser.ParserTest.java
	     and there are more errors. The error occurs
	     with  (at the University)

                CLASSPATH=/home/ms/Swprakt/Slime/src:/home/java/JLex/JLex.jar:/home/java/cup/java_cup.jar:
	     
             and in a workdir without the checked-in javacup and JLEX.
	     different combinations of this choice are untested for
	     compilability. Cause of error unknown
  status:    locally solved, 29.06.2002, mwe
	     the classpath has to be set the right way, for instance

                CLASSPATH=/home/java/JLex/JLex.jar:/home/java/cup/java_cup.jar:/home/ms/Swprakt/Slime/src

	     otherwise java tries to load java_cup and JLex classes from 
	        /home/ms/Swprakt/Slime/src/JLex/ ...
             ParserTest.java last revision 1.8 was checked in 28.06.02
	     and compiled without any errors with the following classpath:
	     
                CLASSPATH=/home/java/JLex/JLex.jar:/home/java/cup/java_cup.jar:/home/mwe/nslime/Slime/src
	     
	     I believe it would make more sense to have constant
	     time intervals for creating the Errors.txt, e.g. first thing
	     in the morning -meanwhile most of the students are asleep-
	     with a fresh checked out version.

=======


Error 29:     grammar for stmt
 package:     sfcparser (cup)	q
 class:       question  (by code inspection)
 status:      reported, 2.7.02, Steffen, answered by MArco
 description: what does LinkedList.addAll() do? Is the order ok?
              answer: it puts it at the end



Error 30:     grammar
 package:     sfcparser (cup)
 class:       question  (by code inspection)
 status:      reported, 2.7.02, Steffen,
              answered, 2.7.02, Steffen
 description: what's the difference between stmtlist and stmtblock?
              can they be merged? Especially since in the clause
	      for sfcprogram, there seem to be a

	         ``{ stmt; stmtlist }''
	       which is the same as stmt-block, i.e., there's
	       an overlap. (SFC.cup v1.10).
	       One difference seems to be that stmt-block can
	       be empty.
	        
	       Seems ok, stmt-block uses stmt-list, so that's
	       no duplication (but see question 31)

	       

Error 19:     doc problem
 package:     sfcparser.SFCLex
 class:       _public_ ugliness
 status:      reported, 27.6.02, Steffen
              27.06.02 (mwe)
 description: the web-page contain stuff that does not belong there:
              http://www.informatik.uni-kiel.de/inf/deRoever/SS02/Java/Slime/doc/slime/sfcparser/SFCLex.html


Error 18(2):   compilation broken (re-entered from repaired section)
  package:     all
  Class:      fatal and deadly!!!
  status:     reported, 26.6.02, Boeck/Steffen
	      27.06.02 (mwe) see mailling-list for solution
              no common solution yet, will be decided 3.7.02 (Steffen, 28.6)
  description: CLASSPATH-confusion (see emails
  status:     SOIA, explained within repaired error 25


Error 16:      LEX/YACC
 package:      (sfcpasrser)
 status:       reported, 26.6.02
	       27.06.02 (mwe) 
 class:        question, potetntial cause of trouble
 description:  is it necessary, to check in the in
               LEX/YACC, especially only in class files,
	       (and no MAKEFILE!) to rebuild it???????
               What influence does it have to the
	       global structure?

Error 15:      typed variables?
 package:      sfcparser
 class:       question
 status:       reported/posed/fatal, 26.6.02, Steffen
	       27.06.02 (mwe) boolean/int, opt. double
 description:  need the variable a type-field? 
               Perhaps one could remove it, would be cleaner for
	       the Hashtable implementation of the type
	       checker. Or even better overwrite equals, because
	       there are also the pos-field.
	       Without any change, the Hashtable implementation
	       will not work.

Error 14:      checked in class files
 package:      sfcparser
 status:       non-fatal (but potential source of curious errors
 status:       reported (via email to Marco), 25.6.02, Steffen
               27.06.02 (mwe) "cvs -d <CVSREPPATH> add -ko <filename>
 description:  non source files (especially class files) should
               not be checked in.


Error 13:      package structure 
 package:      sfcparser
 status:       fatal (in the end)
	       27.06.02 (mwe) see. maillinglist-discussion error 18	     
 reported:     25.6.02, Steffen
 description:  there's no package declaration in the javafiles.
               perhaps this also leads to the non-generation of doc-documents.
	       Why is the an import io.* needed? 
	       What is the use of packacke io anyway? If not needed, we 
	       should remove it.

Error 12:      no doc generated
 package:      sfcparser
 status:       reported, 25.06.02, Steffen
	       27.06.02 (mwe) see. maillinglist-discussion error 18
 class:        fatal, (because no doc is generated)
 description:  the parser generates tons of warnings and also 
               serious sounding warnings! way over 100!


Error 10:      Makefile missing
 package:      parser
 status:       reported 25.6.02, Steffen
               27.06.02 (mwe)
 class:        fatal, breach of our requirements
 description:  theres not makefile in the parser directory

Error 9:       structure
 package:      parser/absynt
 status:       reported 25.6.02. Steffen (also asked Marco via email, no reply, I guess)
	       27.06.02 (mwe) it was an example for nested sub-packages,
		additionally it does not make sense to have an Absfc2SFCConverter
		and an absynt, but no absfc
 class:        non-fatal, but doesn't look nice
 description:  Is the deep structure under absynt needed?
               if not we shoud remove it (also from the repos)


Error 11:      Grammar missing
 package:      parser
 status:       reported (here), 25.06.02, Steffen, done 27.6.02
 class:        fatal, a parser without grammar does not work
 description:  There is no LEX/yacc files in the parser directory.


Error 7:       no code
 package:      simulator
 status:       emailed to Immo 24.6.02, M. Steffen, done
 class:        fatal
 description:  contrary to announcement, the checked in code is
               not in repos



Error 2:   structure of the tool
   package:     gui/all
   status: repaired: 12.6.2002 (M. Steffen);reported 12.6.2002 (M. Steffen, M. Wendel)
   class:  fatal, in case packages use non-uniform assumptions
   description: the package structure of the tool is 
	        perhaps not ideal (according to the
   	        discussions from 8.5.2002).

Error 36:     re-generation difference
 package:     sfcparser/SFCParser.java 1.11
 status:      reported, 3.7.02, Steffen
 class:       dubiousity, point to discuss
 description: in the package sfcparser/
                  make clean; make
	      and a simple
	          make
	      behave different (cf. also Error 35, 24
	      + the discussion on the email-list what to
	      check in and what not, which version of
	      JLEX and YACC to use etc). 

	      I tried to ``diff'' v1.11 with the one generated, but since
	      they are generated files with parser tables etc in it, I
	      can't analyse it.

	      I use 

              env |grep CLA
                 CLASSPATH=/home/ms/Swprakt/Slime/src:/home/java/JLex/JLex.jar:/home/java/cup/java_cup.jar:
	
	      also /home/ms/Swprakt/Slime/src/java_cup|JLEX is checked out
	      and there are 

                 java_cup.jar and JLEX.jar 
	

              within the src/slime/sfcparser.

	      I have no idea, which of the versions is taken (and
	      I won't even think about it).(Steffen).

 status:    	       03.07.2002 mwe@informatik.uni-kiel.de
	      Obviously you did not get it, how java does search for classes.
	      Now where we already have /src/java_cup and /src/JLex you CAN NOT
	      use that classpath ! You will have to use the following (as already
	      mentioned some time before):

               CLASSPATH=/home/java/JLex/JLex.jar:/home/java/cup/java_cup.jar:/home/ms/Swprakt/Slime/src

	      If you still want to use your old classpath, YOU WILL HAVE TO DELETE
	      those directories src/java_cup and src/JLex.
	      But as you mentioned before YOU CANNOT DELETE delete them. So your choices sum up
	      to use the RIGHT classpath with the correct uni-jlex/cup or get someone those
	      directories deleted for you.


Error 36.2:   re-generation difference (cf. Error 36)
 package:     sfcparser/SFCParser.java 1.11
 status:      reported, 3.7.02, Steffen
 class:       fatal, version mess
 description: here a bit more info.
              I did the same experiment (especially same classpath)
              as in #36    but without

                 /home/ms/Swprakt/Slime/src/slime/sfcparser/JLex.jar
                 /home/ms/Swprakt/Slime/src/slime/sfcparser/java_cup.jar

	      and then (additionally) without 



                 /home/ms/Swprakt/Slime/src/JLex
                 /home/ms/Swprakt/Slime/src/java_cup.jar

              make invokes

                 java java_cup.Main -package slime.sfcparser -parser SFCParser -symbols SFCSymbols -nonterms -expect 9 < SFC.cup 

	       All _generated Versions are identical, but different 
	       form 1.11.

             ---
              with  export CLASSPATH=/home/ms/Swprakt/Slime:/home/ms/Swprakt/Slime/src/java_cup:/home/ms/Swprakt/Slime/src/JLex:

	      it does not compile at all (it doesn't file cup)
	     
             ----

               with  CLASSPATH=/home/ms/Swprakt/Slime:/home/ms/Swprakt/Slime/src/java_cup/docs/java_cup.jar:/home/ms/Swprakt/Slime/src/JLex/JLex.jar:


	       This time (unlike in #36) the generate SFC.cup 

	                    is identical with the checked in 
			    version 1.11!



	      This probably means, that Wendel generates
	      SFCParser.java not with these 2 checked-in version
	      (I can't be sure, since I can't test what happens at other places
 	       and what CLASSPATH others use privately, 
	       and it's irrelevant at any rate).
		 

             -----
	         with the sfcparser/Makefile v1.5, i.e., with
		 classpath set as ../..: 

                  javac -classpath ../.. SFCLex.java

		 same as the above.

             ---- 

	        with sfcparser/Makefile v.1.5 
		+ wihout the local jarfiles
		+ with CLASSPATH=/home/ms/Swprakt/Slime:/home/ms/Swprakt/Slime/src/java_cup/docs/java_cup.jar:/home/ms/Swprakt/Slime/src/JLex/JLex.jar:
                   (which should not play a role)

		 => Sfcparser.java 1.11 IS REPRODUCED.


[sfcparser @ gollum] > cvs update
? TMP
cvs server: Updating .
U JLex.jar
U SFCLex.java
U SFCParser.java
U SFCSymbols.java
U java_cup.jar
[sfcparser @ gollum] > rm *.jar
rm: remove `JLex.jar'? y
rm: remove `java_cup.jar'? y
[sfcparser @ gollum] > make
javac -classpath ../.. SFCLex.java
javac -classpath ../.. SFCParser.java SFCSymbols.java 
javac -classpath ../.. Absfc2SFCConverter.java
javac -classpath ../.. ParserTest.java
ParserTest.java:151: cannot resolve symbol
symbol  : method print  (slime.absynt.absfc.SFCabtree)
 ........

                       
33 errors
make: *** [ParserTest] Error 1
[sfcparser @ gollum] > cvs diff ParserTest.java 
[sfcparser @ gollum] > 
	       ------
 status:    	       03.07.2002 mwe@informatik.uni-kiel.de
	      Obviously you did not get it, how java does search for classes.
	      Now where we already have /src/java_cup and /src/JLex you CAN NOT
	      use that classpath ! You will have to use the following (as already
	      mentioned some time before):

               CLASSPATH=/home/java/JLex/JLex.jar:/home/java/cup/java_cup.jar:/home/ms/Swprakt/Slime/src

	      If you still want to use your old classpath, YOU WILL HAVE TO DELETE
	      those directories src/java_cup and src/JLex.
	      But as you mentioned before YOU CANNOT DELETE delete them. So your choices sum up
	      to use the RIGHT classpath with the correct uni-jlex/cup or get someone those
	      directories deleted for you.


Error 35:     incompat. types, re-build curiosity
 package:     sfcparser/SFCParser.java 1.11 (but regenerated,
                i.e., it is not really 1.11!!!)
 class:       fatal + deadly
 status:      reported, 3.7.02, Steffen
 description: 
              SFCParser.java:1348: inconvertible types
              found   : slime.absynt.absfc.Comment
              required: slime.absynt.absfc.Statement
		 RESULT = (slime.absynt.absfc.Statement) s ; 
	
             (NB: I still can't compile because of the controversy
	      concerning CLASSPATH, etc), but trying to compile	
	      gives this additional error.
	      The error is produced by 
	       cd sfcparser
	       make clean
	       make 


              (If I do:
	         cd sfcparser
	         cvs update
		 make
		 
               (i.e., no make clean) then it compiles over this error and
	       it get's as the next errors those in ParserTest (I     
	       report here only the first in ParserTest.java 1.11)

               ParserTest.java:151: cannot resolve symbol
               symbol  : method print  (slime.absynt.absfc.SFCabtree)
               location: class slime.sfcparser.PrettyPrint4Absfc
		  prettyAbsfc.print( absfctree );

status:    03.07.2002 mwe@informatik.uni-kiel.de
	    the files SFCParser.java, SFCSymbols.java, SFCLex.java 
	    have been remove from the repository.	       


Errors35:
 package:     all
 class:       request
 status:      reported (cvslog), 3.7.02, Wendel
 description: My advice for the next semester would be to use LOGIN-
              accounts for cvs. In my humble opinion it was Thomas
              Richter who was the first to propose this. It makes the
              logs more useful and avoids problems with $CVS_RSH.


Error 33:     grammar: stmt
 package:     sfcparser.SFC.cup v.10
 class:       error
 status:      reported/discussed, 2.7.02, Steffen + Wendel
 description: the clause for stmt does not give back a result,
              may be the cause also for other errors that
	      Wendel talks about. 
 status:      repaired, 2.7.03, mwe	

Error 32:     grammar-precedences
 package:     sfcparser.SFC.cup v.10
 class:       doubtful (by code inspection)
 status:      reported/discussed, 2.7.02, Steffen + Wendel
 description: the prec'/associativity are not as they should
 status:      repaired, 2.7.03, mwe	


Error 31:     grammar for stmtblock
 package:     sfcparser.SFC.cup v.10
 class:       dubious (by code inspection)
 status:      reported, 2.7.02, Steffen
 description: overlap in the clauses of stmtblock and stmtlist
               for the case {stmt}?:

	       stmtlist can containt 1 stmt
	       and stmtblock = {stmt} | {stmtlist}

	      (Line 904 of SFC.cup v1.10)
 status:      repaired, 2.7.03, mwe	

Error 28:     grammar for stmt
 package:     sfcparser (cup)
 class:       dubious (found by code inspection, not tested)
 status:      reported, 2.7.02, Steffen, confirmerd (Marco)
 description: seems like the grammar enforces 2 `;' in a row,
              cf second alternative of sfcprogram + the fact that
	      all stmt's end in a semicolon. (Version 1.10 of SFC.cup)
 status:      repaired, 2.7.03, mwe	

Error 27:   doc warnings
 package:   sfcparser
 class:     non-fatal
 status:    reported, 2.7.02. Steffen
 description: make doc generates again -it was better in the meantime-
             loads of dire warnings.
	     See Error 12 in the repaired section
 status:      repaired, 2.7.03, mwe	

Error 25:    Shift/reduce
 package:    sfcparser
 class:      potentially fatal, need to be investigated
 status:     reporter 29.6.02, Steffen
 description: shift/reduce conflicts should at least be
             a matter of concern.
 status:     repaired, 2.7.02 mwe

Error 24:    compilation broken
 package:    all
  class:     fatal and deadly
  status:    reported, 29.6.02, Steffen
  description: another compilation error (different from 18, 18 had
             been repaired in the meantime, as it seemed, there	
	     was a point in time where compilation was possible).
	     This time it's slime.sfcparser.ParserTest.java
	     and there are more errors. The error occurs
	     with  (at the University)

                CLASSPATH=/home/ms/Swprakt/Slime/src:/home/java/JLex/JLex.jar:/home/java/cup/java_cup.jar:
	     
             and in a workdir without the checked-in javacup and JLEX.
	     different combinations of this choice are untested for
	     compilability. Cause of error unknown

  status:   3.7.02 mwe
	    	     
                CLASSPATH=/home/java/JLex/JLex.jar:/home/java/cup/java_cup.jar:/home/ms/Swprakt/Slime/src

